# expert-pancake
def graph(edges,vertex):
    v = len(vertex)
    matrix= [[0 for x in range(v)] for y in range(v)]
    for i in range(v):
        for j in range(v):
            if (i, j) in edges:
                matrix[i][j] = 1
                matrix[j][i] = 1
     return matrix     
     
vertex = [0,1,2,3,4]
edges = [(0,1),(0,2),(2,3),(2,4)]
matrix = graph(edges,vertex)
print(matrix)

def main(matrix):
    m = len(matrix)
    n = len(matrix)
    S = 0
    path = [[]for x in range(n)]
    path[0].append(S)
    short = 0
    for i in range(n):
        short = m
        for j in range(m):
            if matrix[i][j] == 1 and short > j:
                short = j
                weight = (i,j)
         path[i] = path[short].copy()
         path[i].append(i)
         
    print(path)
main(matrix)
